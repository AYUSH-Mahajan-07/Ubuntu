/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author ASUS
 */
import java.awt.Color;
import java.awt.Component;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.Timer;

public class SudokuGUI extends javax.swing.JFrame {
    private JTextField JTextField;
    private String selectedDifficulty = "easy";  // default
    private Sudoku sudoku;

    /**
     * Creates new form SudokuGUI
     */
    public SudokuGUI() {
        initComponents();
        runBanner();
    }

    private void runBanner() {
        String bannerText = DevelopedBy.getText();
        int bannerLength = bannerText.length();

        Timer t = new Timer(200, new ActionListener() {
            int count = 0;

            public void actionPerformed(ActionEvent e) {
                count = (count + 1) % bannerLength;
                DevelopedBy.setText(bannerText.substring(count) + "   " + bannerText.substring(0, count));
            }
        });

        t.start();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        TextAnalyzerTittle = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        DevelopedBy = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        Start = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        EnterGridNumber = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox<>();
        Submit = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(4, 134, 134));

        TextAnalyzerTittle.setEditable(false);
        TextAnalyzerTittle.setBackground(new java.awt.Color(0, 153, 153));
        TextAnalyzerTittle.setFont(new java.awt.Font("STZhongsong", 1, 32)); // NOI18N
        TextAnalyzerTittle.setForeground(new java.awt.Color(255, 255, 255));
        TextAnalyzerTittle.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        TextAnalyzerTittle.setText("Sudoku Solver");
        TextAnalyzerTittle.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        TextAnalyzerTittle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextAnalyzerTittleActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(88, 173, 173));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel3.setBackground(new java.awt.Color(0, 153, 153));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 388, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 398, Short.MAX_VALUE)
        );

        jPanel2.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 390, 400));

        DevelopedBy.setBackground(new java.awt.Color(88, 173, 173));
        DevelopedBy.setForeground(new java.awt.Color(255, 255, 255));
        DevelopedBy.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        DevelopedBy.setText("Developed by Ayush Mahajan");

        jPanel4.setBackground(new java.awt.Color(88, 173, 173));

        Start.setBackground(new java.awt.Color(0, 153, 153));
        Start.setForeground(new java.awt.Color(255, 255, 255));
        Start.setText("Start");
        Start.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StartActionPerformed(evt);
            }
        });

        jTextField1.setEditable(false);
        jTextField1.setBackground(new java.awt.Color(0, 153, 153));
        jTextField1.setForeground(new java.awt.Color(255, 255, 255));
        jTextField1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField1.setText("Enter the Number of Grid");
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        EnterGridNumber.setBackground(new java.awt.Color(0, 153, 153));
        EnterGridNumber.setForeground(new java.awt.Color(255, 255, 255));
        EnterGridNumber.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        EnterGridNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EnterGridNumberActionPerformed(evt);
            }
        });

        jComboBox1.setBackground(new java.awt.Color(0, 153, 153));
        jComboBox1.setForeground(new java.awt.Color(255, 255, 255));
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Easy", "Medium", "Hard" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        Submit.setBackground(new java.awt.Color(0, 153, 153));
        Submit.setForeground(new java.awt.Color(255, 255, 255));
        Submit.setText("Submit");
        Submit.setToolTipText("Enter to submit ");
        Submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubmitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(0, 40, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Start, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(EnterGridNumber)
                    .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 185, Short.MAX_VALUE)
                    .addComponent(Submit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(38, 38, 38))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(EnterGridNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Start, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Submit, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(DevelopedBy)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 413, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(13, 13, 13))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(TextAnalyzerTittle, javax.swing.GroupLayout.PREFERRED_SIZE, 659, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(TextAnalyzerTittle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 422, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(DevelopedBy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TextAnalyzerTittleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextAnalyzerTittleActionPerformed

    }//GEN-LAST:event_TextAnalyzerTittleActionPerformed

    private void SubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubmitActionPerformed
        try {
            if (sudoku == null) {
                JOptionPane.showMessageDialog(this, "Please start a new game first");
                return;
            }

            int gridSize = sudoku.getSize();
            int[][] userGrid = new int[gridSize][gridSize];
            int componentIndex = 0;
            boolean hasEmptyUnit = false;
            boolean hasInvalidNumbers = false;

            Component[] components = jPanel3.getComponents();

            
            if (components.length != gridSize * gridSize) {
                JOptionPane.showMessageDialog(this, "Invalid grid configuration. Please restart the game.");
                return;
            }

           
            for (int row = 0; row < gridSize; row++) {
                for (int col = 0; col < gridSize; col++) {
                    if (componentIndex < components.length && components[componentIndex] instanceof JTextField) {
                        JTextField unit = (JTextField) components[componentIndex];
                        String text = unit.getText().trim();
                        
                        if (text.isEmpty()) {
                            hasEmptyUnit = true;
                            userGrid[row][col] = 0;
                        } else if (text.matches("\\d+")) {
                            int value = Integer.parseInt(text);
                            if (value < 1 || value > gridSize) {
                                hasInvalidNumbers = true;
                                userGrid[row][col] = value;
                            } else {
                                userGrid[row][col] = value;
                                unit.setBackground(Color.WHITE);
                            }
                        } else {
                            JOptionPane.showMessageDialog(this, "Please enter numbers only (1-" + gridSize + ")");
                            return;
                        }
                    }
                    componentIndex++;
                }
            }

            if (hasEmptyUnit) {
                JOptionPane.showMessageDialog(this, "Please fill in all cells before submitting");
                return;
            }

            // Check for invalid numbers
            if (hasInvalidNumbers) {
                JOptionPane.showMessageDialog(this, "Numbers must be between 1 and " + gridSize);
                return;
            }

            // Validate solution using SudokuLogic
            if (sudoku.isValidSolution(userGrid)) {
                // Show congratulatory message
                String message = "Congratulations! You have completed the " + selectedDifficulty + " level!\n";
                message += "Would you like to try another level?";
                
                int option = JOptionPane.showConfirmDialog(this, message, "Level Complete!", 
                    JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE);
                
                // Disable all cells after correct solution
                for (Component comp : components) {
                    comp.setEnabled(false);
                }
                
                // If user wants to try another level
                if (option == JOptionPane.YES_OPTION) {
                    // Clear the grid
                    jPanel3.removeAll();
                    jPanel3.revalidate();
                    jPanel3.repaint();
                    // Reset the grid size input
                    EnterGridNumber.setText("");
                }
            } else {
                // Show error message with specific feedback
                String errorMessage = "Incorrect solution. Please check:\n";
                errorMessage += "1. Each row must contain unique numbers\n";
                errorMessage += "2. Each column must contain unique numbers\n";
                errorMessage += "3. Each " + (gridSize == 9 ? "3x3" : "subgrid") + " must contain unique numbers";
                
                JOptionPane.showMessageDialog(this, errorMessage, "Incorrect Solution", 
                    JOptionPane.ERROR_MESSAGE);
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Please enter valid numbers only");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "An error occurred. Please check your input.");
        }
    }//GEN-LAST:event_SubmitActionPerformed

    private void StartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StartActionPerformed
        try {
            // Clear existing grid
            jPanel3.removeAll();
            
            // Get grid size from input
            String sizeText = EnterGridNumber.getText();
            int gridSize = Integer.parseInt(sizeText);
            
            // Validate grid size
            if (gridSize < 2 || gridSize > 9) {
                JOptionPane.showMessageDialog(this, "Grid size must be between 2 and 9");
                return;
            }
            
            // Create new SudokuLogic instance and generate grid
            sudoku = new Sudoku(gridSize, selectedDifficulty);
            sudoku.generateGrid();
            int[][] grid = sudoku.getGrid();
            
            // Set fixed size for the grid panel
            int cellSize = 50; // Size of each units
            int totalSize = gridSize * cellSize;
            jPanel3.setPreferredSize(new java.awt.Dimension(totalSize, totalSize));
            
            // Create grid layout with proper spacing
            jPanel3.setLayout(new java.awt.GridLayout(gridSize, gridSize, 1, 1));
            
            // Create text fields for the grid
            for (int row = 0; row < gridSize; row++) {
                for (int col = 0; col < gridSize; col++) {
                    JTextField units = new JTextField();
                    units.setHorizontalAlignment(JTextField.CENTER);
                    units.setFont(new java.awt.Font("Arial", java.awt.Font.BOLD, 20));
                    units.setPreferredSize(new java.awt.Dimension(cellSize, cellSize));
                    
                    // Set background color for 3x3 subgrids
                    if ((row / 3 + col / 3) % 2 == 0) {
                        units.setBackground(new Color(240, 240, 240));
                    } else {
                        units.setBackground(Color.WHITE);
                    }
                    
                    // If units has a value, display it with special formatting
                    if (grid[row][col] != 0) {
                        units.setText(String.valueOf(grid[row][col]));
                        units.setEditable(false);
                        
                        units.setBackground(new Color(200, 230, 255)); 
                        units.setForeground(new Color(0, 0, 150)); 
                    }
                    
                    jPanel3.add(units);
                }
            }
            
            // Refresh the panel and pack the frame
            jPanel3.revalidate();
            jPanel3.repaint();
            pack();
            
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Please enter a valid grid size");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "An error occurred: " + e.getMessage());
        }
    }//GEN-LAST:event_StartActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void EnterGridNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EnterGridNumberActionPerformed

    }//GEN-LAST:event_EnterGridNumberActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        String selected = (String) jComboBox1.getSelectedItem();
        if (selected != null) {
            selectedDifficulty = selected.toLowerCase();
        }
    }//GEN-LAST:event_jComboBox1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SudokuGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SudokuGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SudokuGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SudokuGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SudokuGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField DevelopedBy;
    private javax.swing.JTextField EnterGridNumber;
    private javax.swing.JButton Start;
    private javax.swing.JButton Submit;
    private javax.swing.JTextField TextAnalyzerTittle;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
